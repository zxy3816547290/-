#include<stdio.h>
#include<string.h>
struct node{
	node*lchild;
	node*rchild;
	int c;
}tree[100];
int ans=0;
node*create()
{
	tree[ans].lchild=tree[ans].rchild=NULL;
	return &tree[ans++];
}
void preorder(node*t)
{
	printf("%4d",t->c);
	if(t->lchild!=NULL)
	{
		preorder(t->lchild);
	}
	if(t->rchild!=NULL)
	{
		preorder(t->rchild);
	}
}
void inorder(node*t)
{
	if(t->lchild!=NULL)
	{
		inorder(t->lchild);
	}
	printf("%4d",t->c);
	if(t->rchild!=NULL)
	{
		inorder(t->rchild);
	}
}
void postorder(node*t)
{
	if(t->lchild!=NULL)
	{
		postorder(t->lchild);
	}
	if(t->rchild!=NULL)
	{
		postorder(t->rchild);
	}
	printf("%4d",t->c);
}
node*insert(node*t,int a)
{
	if(t==NULL)
	{
		t=create();
		t->c=a;
		return t;
	}
	else if(t->c>a)
	{
		t->lchild=insert(t->lchild,a);
	}
	else if(t->c<a)
	{
		t->rchild=insert(t->rchild,a);
	}
	return t;
}
int a[100];
void main()
{
	int n,i;
	while(scanf("%d",&n)!=EOF)
	{
	    node*t=NULL;
		for(i=0;i<n;i++)
		{
			scanf("%d",&a[i]);
			t=insert(t,a[i]);
		}
		preorder(t);
		printf("\n");
		inorder(t);
		printf("\n");
		postorder(t);
		printf("\n");
	}
}
